#######################
# Setting Constraints #
#######################
CREATE CONSTRAINT ON (u:User) ASSERT u.id IS UNIQUE; 
CREATE CONSTRAINT ON (t:Team) ASSERT t.id IS UNIQUE; 
CREATE CONSTRAINT ON (c:TeamChatSession) ASSERT c.id IS UNIQUE; 

################
# Loading Data #
################
LOAD CSV FROM "file:/chat-data/chat_CREATE_team_chat.csv" AS row 
MERGE (u:User {id: toInteger(row[0])})
MERGE (t:Team {id: toInteger(row[1])}) 
MERGE (c:TeamChatSession {id: toInteger(row[2])}) 
MERGE (u)-[:CreatesSession{timeStamp: row[3]}]->(c) 
MERGE (c)-[:OwnedBy{timeStamp: row[3]}]->(t)

LOAD CSV FROM "file:/chat-data/chat_join_team_chat.csv" AS row 
MERGE (u:User {id: toInteger(row[0])}) 
MERGE (c:TeamChatSession {id: toInteger(row[1])}) 
MERGE (u)-[:Join{timeStamp: row[2]}]->(c)

LOAD CSV FROM "file:/chat-data/chat_leave_team_chat.csv" AS row 
MERGE (u:User {id: toInteger(row[0])}) 
MERGE (c:TeamChatSession {id: toInteger(row[1])}) 
MERGE (u)-[:Leaves{timeStamp: row[2]}]->(c)

################
# Creating Graph #
################

MATCH p = (u:User) - [:CreatesSession] -(c:TeamChatSession) -[:OwnedBy] ->(t)
WHERE t.id in [28, 100, 82, 22, 18, 9, 77, 20, 66, 57]
RETURN p


